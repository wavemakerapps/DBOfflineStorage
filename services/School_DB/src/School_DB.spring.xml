<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.dbofflinestorage.school_db.controller,com.dbofflinestorage.school_db.service,com.dbofflinestorage.school_db.dao"/>
    <bean class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>
                    classpath:School_DB.properties
                </value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="searchSystemEnvironment" value="true"/>
    </bean>
    <bean class="com.zaxxer.hikari.HikariConfig" id="School_DBHikariConfig">
        <property name="jdbcUrl" value="${School_DB.url}"/>
        <property name="driverClassName" value="${School_DB.driverClass}"/>
        <property name="username" value="${School_DB.username}"/>
        <property name="password" value="${School_DB.password}"/>
        <property name="maximumPoolSize" value="${School_DB.maxPoolSize}"/>
        <property name="minimumIdle" value="${School_DB.minPoolSize}"/>
        <property name="connectionTimeout" value="30000"/>
        <property name="validationTimeout" value="5000"/>
        <property name="idleTimeout" value="600000"/>
        <property name="maxLifetime" value="1800000"/>
        <property name="initializationFailTimeout" value="-1"/>
        <property name="leakDetectionThreshold" value="120000"/>
        <property name="registerMbeans" value="false"/>
    </bean>
    <bean class="com.zaxxer.hikari.HikariDataSource" destroy-method="close" id="School_DBWMManagedDataSource" lazy-init="true">
        <constructor-arg ref="School_DBHikariConfig"/>
    </bean>
    <bean class="com.wavemaker.runtime.data.interceptors.WMEntityInterceptor" id="School_DBEntityInterceptor"/>
    <bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="School_DBSessionFactory">
        <property name="dataSource" ref="School_DBDataSource"/>
        <property name="packagesToScan" value="com.dbofflinestorage.school_db"/>
        <property name="entityInterceptor" ref="School_DBEntityInterceptor"/>
        <property name="entityTypeFilters" ref="nonHistoryEntitiesFilter"/>
        <property name="mappingResources">
            <list>
                <value>
                School_DB-queries.hbm.xml
                </value>
            </list>
        </property>
        <property name="hibernateProperties" ref="School_DBHibernateProperties"/>
    </bean>
    <bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" id="School_DBTransactionManager">
        <property name="sessionFactory" ref="School_DBSessionFactory"/>
        <property name="defaultTimeout" value="${School_DB.transactionTimeout}"/>
    </bean>
    <bean class="org.springframework.orm.hibernate5.HibernateTemplate" id="School_DBTemplate">
        <property name="sessionFactory" ref="School_DBSessionFactory"/>
    </bean>
    <bean class="com.wavemaker.runtime.data.dao.query.WMQueryExecutorImpl" id="School_DBWMQueryExecutor">
        <property name="template" ref="School_DBTemplate"/>
    </bean>
    <bean class="com.wavemaker.runtime.data.dao.procedure.WMProcedureExecutorImpl" id="School_DBWMProcedureExecutor">
        <property name="template" ref="School_DBTemplate"/>
        <property name="serviceId" value="School_DB"/>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean" id="School_DBHibernateProperties">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">
                ${School_DB.dialect}
                </prop>
                <prop key="hibernate.show_sql">
                    false
                </prop>
                <prop key="hibernate.globally_quoted_identifiers">
                    false
                </prop>
                <prop key="hibernate.hbm2ddl.auto">
                ${School_DB.hbm2ddl}
                </prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">
                    false
                </prop>
                <prop key="hibernate.schema_update.unique_constraint_strategy">
                    skip
                </prop>
            </props>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.resolver.WMPageableHandlerMethodArgumentResolver" id="School_DBPageableHandlerMethodResolver">
        <property name="pageParameterName" value="page"/>
        <property name="sizeParameterName" value="size"/>
        <property name="oneIndexedParameters" value="true"/>
        <property name="maxPageSize" value="${School_DB.maxPageSize}"/>
        <property name="fallbackPageable">
            <bean class="org.springframework.data.domain.PageRequest">
                <constructor-arg value="0"/>
                <constructor-arg value="20"/>
            </bean>
        </property>
    </bean>
    <bean class="com.wavemaker.runtime.data.datasource.WMDataSource" id="School_DBDataSource">
        <property name="dataSourceType" value="${School_DB.dataSourceType}"/>
        <property name="jndiName" value="${School_DB.jndiName}"/>
        <property name="serviceId" value="School_DB"/>
    </bean>
    <tx:annotation-driven/>
</beans>
