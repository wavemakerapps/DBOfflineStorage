/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.dbofflinestorage.offlinedatabasedefined;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * DateDatabaseDefined generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`DateDatabaseDefined`")
public class DateDatabaseDefined implements Serializable {

    private Integer pkid;
    private LocalDateTime currentDatetime;
    private Date datecol;
    private Byte bytecol;
    private LocalDateTime datetimeCol;
    private Timestamp timestampCol;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PKID`", nullable = false, scale = 0, precision = 10)
    public Integer getPkid() {
        return this.pkid;
    }

    public void setPkid(Integer pkid) {
        this.pkid = pkid;
    }

    @Column(name = "`CURRENT_DATETIME`", nullable = true, insertable = false, updatable = false)
    public LocalDateTime getCurrentDatetime() {
        return this.currentDatetime;
    }

    public void setCurrentDatetime(LocalDateTime currentDatetime) {
        this.currentDatetime = currentDatetime;
    }

    @Column(name = "`DATECOL`", nullable = true, insertable = false, updatable = false)
    public Date getDatecol() {
        return this.datecol;
    }

    public void setDatecol(Date datecol) {
        this.datecol = datecol;
    }

    @Column(name = "`BYTECOL`", nullable = true, scale = 0, precision = 3)
    public Byte getBytecol() {
        return this.bytecol;
    }

    public void setBytecol(Byte bytecol) {
        this.bytecol = bytecol;
    }

    @Column(name = "`Datetime Col`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Column(name = "`Timestamp Col`", nullable = true)
    public Timestamp getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Timestamp timestampCol) {
        this.timestampCol = timestampCol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof DateDatabaseDefined)) return false;
        final DateDatabaseDefined dateDatabaseDefined = (DateDatabaseDefined) o;
        return Objects.equals(getPkid(), dateDatabaseDefined.getPkid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkid());
    }
}