/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.dbofflinestorage.offlineclassicdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportOptions;

import com.dbofflinestorage.offlineclassicdb.Customers;
import com.dbofflinestorage.offlineclassicdb.Employees;
import com.dbofflinestorage.offlineclassicdb.OrderDetails;
import com.dbofflinestorage.offlineclassicdb.models.query.*;

public interface OfflineClassicDBQueryExecutorService {

    Page<SvOroperatorResponse> executeSV_OROperator(Integer officeCode1, Integer officeCode2, Pageable pageable);

    void exportSV_OROperator(Integer officeCode1, Integer officeCode2, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvAndoperatorResponse> executeSV_ANDOperator(String status, Integer custNumber, Pageable pageable);

    void exportSV_ANDOperator(String status, Integer custNumber, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<Customers> executeHQL_FromCustomer(Pageable pageable);

    void exportHQL_FromCustomer(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvLessThanResponse> executeSV_LessThan(Pageable pageable);

    void exportSV_LessThan(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvDistinctResponse> executeSV_DISTINCT(Pageable pageable);

    void exportSV_DISTINCT(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvWhereClauseResponse> executeSV_WhereClause(String city, Pageable pageable);

    void exportSV_WhereClause(String city, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<HqlCustomQueryWithAliasResponse> executeHQL_CustomQueryWithAlias(Pageable pageable);

    void exportHQL_CustomQueryWithAlias(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<Employees> executeHQL_GreaterThanOrderBy(Pageable pageable);

    void exportHQL_GreaterThanOrderBy(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<Employees> executeHQL_FromEntityWhereClause(Integer empNumber, Pageable pageable);

    void exportHQL_FromEntityWhereClause(Integer empNumber, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvBetweenOperatorResponse> executeSV_BetweenOperator(Byte bytevalue1, Byte bytevalue2, Pageable pageable);

    InputStream getBlobColContentForSV_BetweenOperator(Integer pkId, Byte bytevalue1, Byte bytevalue2) throws EntityNotFoundException;

    void exportSV_BetweenOperator(Byte bytevalue1, Byte bytevalue2, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvCombinedOrderByResponse> executeSV_CombinedOrderBy(Pageable pageable);

    InputStream getBlobColContentForSV_CombinedOrderBy(Integer pkId) throws EntityNotFoundException;

    void exportSV_CombinedOrderBy(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvInoperatorResponse> executeSV_INOperator(List<String> pcode, Pageable pageable);

    void exportSV_INOperator(List<String> pcode, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvLikeResponse> executeSV_LIKE(String jobtitle, Pageable pageable);

    void exportSV_LIKE(String jobtitle, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvGreaterThanResponse> executeSV_GreaterThan(Pageable pageable);

    void exportSV_GreaterThan(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<OrderDetails> executeHQL_FromEntityUsingAlias(Pageable pageable);

    void exportHQL_FromEntityUsingAlias(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<HqlCustomQueryWithoutAliasNamesResponse> executeHQL_CustomQueryWithoutAliasNames(Pageable pageable);

    void exportHQL_CustomQueryWithoutAliasNames(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<SvAndOrResponse> executeSV_AND_OR(String status, Integer custNumber1, Integer custNumber2, Pageable pageable);

    void exportSV_AND_OR(String status, Integer custNumber1, Integer custNumber2, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}