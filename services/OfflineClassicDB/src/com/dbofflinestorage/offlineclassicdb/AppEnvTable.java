/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.dbofflinestorage.offlineclassicdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.wavemaker.runtime.data.annotations.WMValueInject;
import com.wavemaker.runtime.data.replacers.Scope;
import com.wavemaker.runtime.data.replacers.providers.VariableType;

/**
 * AppEnvTable generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`APP_ENV_TABLE`")
public class AppEnvTable implements Serializable {

    private Integer pkId;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "byteKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private Byte byteKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "shortKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private Short shortKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "floatKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private Float floatKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "doubleKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private Double doubleKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "charKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private String charKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "stringKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private String stringKey;
    @WMValueInject( type = VariableType.APP_ENVIRONMENT, name = "textKey", scopes = { Scope.UPDATE, Scope.INSERT })
    private String textKey;
    private Boolean booleanCol;
    private LocalDateTime deltaDatetimeCol;
    private Timestamp deltaTimestampCol;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PK_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getPkId() {
        return this.pkId;
    }

    public void setPkId(Integer pkId) {
        this.pkId = pkId;
    }

    @Column(name = "`BYTE_KEY`", nullable = true, scale = 0, precision = 3)
    public Byte getByteKey() {
        return this.byteKey;
    }

    public void setByteKey(Byte byteKey) {
        this.byteKey = byteKey;
    }

    @Column(name = "`SHORT_KEY`", nullable = true, scale = 0, precision = 5)
    public Short getShortKey() {
        return this.shortKey;
    }

    public void setShortKey(Short shortKey) {
        this.shortKey = shortKey;
    }

    @Column(name = "`FLOAT_KEY`", nullable = true, scale = 4, precision = 8)
    public Float getFloatKey() {
        return this.floatKey;
    }

    public void setFloatKey(Float floatKey) {
        this.floatKey = floatKey;
    }

    @Column(name = "`DOUBLE_KEY`", nullable = true, scale = 8, precision = 18)
    public Double getDoubleKey() {
        return this.doubleKey;
    }

    public void setDoubleKey(Double doubleKey) {
        this.doubleKey = doubleKey;
    }

    @Column(name = "`CHAR_KEY`", nullable = true, length = 1)
    public String getCharKey() {
        return this.charKey;
    }

    public void setCharKey(String charKey) {
        this.charKey = charKey;
    }

    @Column(name = "`STRING_KEY`", nullable = true, length = 255)
    public String getStringKey() {
        return this.stringKey;
    }

    public void setStringKey(String stringKey) {
        this.stringKey = stringKey;
    }

    @Column(name = "`TEXT_KEY`", nullable = true, length = 255)
    public String getTextKey() {
        return this.textKey;
    }

    public void setTextKey(String textKey) {
        this.textKey = textKey;
    }

    @Column(name = "`BOOLEAN COL`", nullable = true)
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @Column(name = "`DeltaDatetimeCol`", nullable = true)
    public LocalDateTime getDeltaDatetimeCol() {
        return this.deltaDatetimeCol;
    }

    public void setDeltaDatetimeCol(LocalDateTime deltaDatetimeCol) {
        this.deltaDatetimeCol = deltaDatetimeCol;
    }

    @Column(name = "`DeltaTimestampCol`", nullable = true)
    public Timestamp getDeltaTimestampCol() {
        return this.deltaTimestampCol;
    }

    public void setDeltaTimestampCol(Timestamp deltaTimestampCol) {
        this.deltaTimestampCol = deltaTimestampCol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AppEnvTable)) return false;
        final AppEnvTable appEnvTable = (AppEnvTable) o;
        return Objects.equals(getPkId(), appEnvTable.getPkId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkId());
    }
}